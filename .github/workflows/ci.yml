name: CI (Build)

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # for linux, use cross on ubuntu-latest
          - triple: x86_64-unknown-linux-musl
            on: ubuntu-latest
            cross: true
            rustflags: "-C link-arg=-fuse-ld=lld"
          - triple: aarch64-unknown-linux-musl
            on: ubuntu-latest
            cross: true
            rustflags: "-C link-arg=-fuse-ld=lld"
          # for windows, use cross on ubuntu-latest
          - triple: x86_64-pc-windows-msvc
            on: windows-latest
            cross: false
          #- triple: aarch64-pc-windows-msvc
          #  on: macos-latest
          #  cross: false
          # for macOS, on macOS without cross
          - triple: x86_64-apple-darwin
            on: macos-latest
            cross: false
          - triple: aarch64-apple-darwin
            on: macos-latest
            cross: false
        triple:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          #- aarch64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    runs-on: ${{ matrix.on }}
    env:
      RUSTFLAGS: ${{ matrix.rustflags }}
      CARGO: ${{ matrix.cross && 'cross' || 'cargo' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.triple }}
      - uses: Swatinem/rust-cache@v1
        with:
          target-dir: target
          key: ci-build
      - name: Setup cross
        if: ${{ matrix.cross }}
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Build
        run: ${{ env.CARGO }} build --verbose --target ${{ matrix.triple }}
      - name: Run tests
        run: ${{ env.CARGO }} test --verbose --target ${{ matrix.triple }}
