name: Publish

on:
  workflow_dispatch: {}

env:
  RELEASER_CHANGER: 'regex-pattern:version = "$1"@Cargo.toml'

jobs:
  pre-build:
    name: Update version name
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.update.outputs.version }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: anatawa12/something-releaser@v2
      - uses: snow-actions/git-config-user@v1.0.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: update version name
        id: update
        run: |-
          # update version name
          VERSION="$(get-version)"
          if ! [[ "$VERSION" = *-SNAPSHOT ]]; then
            echo 'VERSION IS NOT SNAPSHOT' >&2
            exit 1
          fi
          VERSION="$(version-unsnapshot "$VERSION")"
          gh-set-output version "$VERSION"
          set-version "$VERSION"
          cargo metadata --format-version=1 > /dev/null
          # commit & tag
          git add .
          git commit -m "v$VERSION"
          git branch releasing
          git push -u origin releasing

  build-rust:
    name: Build rust
    strategy:
      fail-fast: false
      matrix:
        include:
          # for linux, use cross on ubuntu-latest
          - triple: x86_64-unknown-linux-musl
            on: ubuntu-latest
            cross: true
          - triple: aarch64-unknown-linux-musl
            on: ubuntu-latest
            cross: true
          # for windows, use cross on ubuntu-latest
          - triple: x86_64-pc-windows-msvc
            on: windows-latest
            cross: false
          #- triple: aarch64-pc-windows-msvc
          #  on: macos-latest
          #  cross: false
          # for macOS, on macOS without cross
          - triple: x86_64-apple-darwin
            on: macos-latest
            cross: false
          - triple: aarch64-apple-darwin
            on: macos-latest
            cross: false
    runs-on: ${{ matrix.on }}
    needs: [pre-build]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'releasing'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.triple }}
      - uses: Swatinem/rust-cache@v1
        with:
          target-dir: target
          key: ${{ matrix.triple }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --target ${{ matrix.triple }} --release

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.triple }}
          path: target/${{ matrix.triple }}/release/vrc-get*

  publish-crates-io:
    name: Publish
    environment: crates.io
    runs-on: ubuntu-latest
    needs: [pre-build, build-rust]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'releasing'
          fetch-depth: 1

      - name: Publish CARGO
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --no-verify

  publish:
    name: Publish
    environment: master branch
    runs-on: ubuntu-latest
    needs: [pre-build, build-rust]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'releasing'
          fetch-depth: 2
          token: ${{ secrets.MASTER_GITHUB_PAT }}

      # tools
      - uses: anatawa12/something-releaser@v2
      - uses: snow-actions/git-config-user@v1.0.0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions/download-artifact@v3
        with:
          path: outputs

      - name: Push tag
        env:
          VERSION: ${{ needs.pre-build.outputs.version }}
        run: |-
          # set tag and publish current version
          git tag "v$VERSION"
          git push && git push --tags
          # create master and push
          git switch -c master
          git fetch origin master --depth=1
          git log --all --graph
          git push -u origin master

      - name: create release
        shell: bash
        env:
          VERSION: ${{ needs.pre-build.outputs.version }}
          GH_TOKEN: ${{ secrets.MASTER_GITHUB_PAT }}
        run: |-
          mkdir assets

          pushd outputs
            for d in *; do
              pushd "$d"
                ls
                for f in vrc-get*; do
                  mv $f "../../assets/$d-$f"
                done
              popd
            done
          popd

          sleep 1
          gh release create "$VERSION" assets/*

          rm -rf outputs assets

      - name: Update To Next Version
        run: |
          VERSION="$(get-version)"
          VERSION="$(version-next "$VERSION")"
          set-version "$(version-snapshot "$VERSION")"
          cargo metadata --format-version=1 > /dev/null
          git add .
          git commit -m "prepare for next version: $VERSION"
          git push
          git push --delete origin releasing

  update-brew-repo:
    name: Publish
    environment: 
      name: homebrew-core
      url: https://github.com/anatawa12/homebrew-core
    runs-on: macos-latest
    needs: [pre-build, publish]
    steps:
      - run: git config --global user.name "github-actions[bot]" &&
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: update brew
        run: brew update && brew update

      - name: tap anatawa12/core
        run: brew tap anatawa12/core

      - name: set credentials for anatawa12/core tap
        env:
          TOKEN: ${{ secrets.BREW_GITHUB_PAT }}
        run: |-
          PLACEHOLDER="AUTHORIZATION: basic github_token_placeholder_fd4b604d63e043949549caa3475c6f89"
          CREDENTIAL="$(echo "x-access-token:$TOKEN" | base64 | tr -d '\n')"

          cd "$(brew --repository anatawa12/core)"
          git config --local http."https://github.com".extraheader "$PLACEHOLDER"
          mv .git/config .git/config.bak
          sed "s/$PLACEHOLDER/AUTHORIZATION: basic $CREDENTIAL/" <.git/config.bak >.git/config

      - name: Create update pr for anatawa12/homebrew-core 
        env:
          VERSION: ${{ needs.pre-build.outputs.version }}
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.BREW_GITHUB_PAT }}
        run: |-
          brew bump-formula-pr \
            anatawa12/core/vrc-get \
            --no-fork \
            --url "https://github.com/anatawa12/vrc-get/archive/${VERSION}.tar.gz"

      - name: clear credentials for anatawa12/core tap
        run: |-
          cd "$(brew --repository anatawa12/core)"
          git config --local --unset http."https://github.com".extraheader "$PLACEHOLDER"
